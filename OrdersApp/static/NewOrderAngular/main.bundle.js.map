{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-9\\\">\\r\\n           <div class=\\\"card card-outline mb-3\\\">\\r\\n\\r\\n                    <div class=\\\"card-header card-primary\\\" style=\\\"font-size:15px;font-weight:bolder\\\">Available Products</div>\\r\\n\\r\\n                    <!--div class=\\\"input-group input-group-lg inner-addon left-addon\\\" style=\\\"width:100%\\\"><input type=\\\"search\\\" class=\\\"form-control input-lg\\\" (keyup)=\\\"filter()\\\" style=\\\"border-radius:0px\\\" name=\\\"\\\" placeholder=\\\"search\\\" [(ngModel)]=\\\"SearchTerm\\\" /><i style=\\\"z-index:55;\\\" class=\\\"fa fa-search searchIcon fa-lg\\\"></i><span *ngIf=\\\"SearchTerm.length>0\\\" (click)=\\\"clearSearch();\\\" class=\\\"fa fa-window-close fa-2x searchClear\\\"> </span></div-->\\r\\n                      <div *ngFor=\\\"let product of Products; let i = index\\\">\\r\\n                          <div class=\\\"card-block card-secondary\\\" style=\\\"padding:0;padding-left:10px;font-weight:strong;font-size:larger;\\\">{{product.Category}}</div>\\r\\n                    <div class=\\\"card-block\\\" style=\\\"padding:0\\\">\\r\\n                        <ul  [dragula]='\\\"fourth-bag\\\"' class=\\\"list-group list-group-flush\\\" [dragulaModel]='product.Items'>\\r\\n                            <li *ngFor=\\\"let item of product.Items; let j = index\\\" style=\\\"margin:5px;padding:14px;\\\" class=\\\"list-group-item item\\\">\\r\\n<button class=\\\"btn pull-right\\\" style=\\\"background-color:#1ab394;color:white;\\\" (click)=\\\"add(item,i,j)\\\">ADD</button>\\r\\n                               <strong style=\\\"font-size:larger\\\">{{item.Name}} _ {{item.Price}}$</strong>\\r\\n                            </li>\\r\\n                            </ul>\\r\\n                    </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-3\\\">\\r\\n       <div class=\\\"affix\\\">\\r\\n          <div class=\\\"card card-outline mb-4\\\">\\r\\n                    <div class=\\\"card-header card-primary\\\" style=\\\"font-size:15px;font-weight:larger\\\">Your Order</div>\\r\\n<input type=\\\"text\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"Pickup Time\\\"/>\\r\\n                     <div class=\\\"card-block\\\" style=\\\"padding:0\\\">\\r\\n                        <ul [dragula]='\\\"fourth-bag\\\"' class=\\\"list-group list-group-flush\\\" [dragulaModel]='OrderItems' style=\\\"height:400px;overflow-y:auto;\\\">\\r\\n                            <li  style=\\\"margin:5px;\\\" *ngFor=\\\"let item of OrderItems\\\" class=\\\"list-group-item item\\\">\\r\\n<div class=\\\"row\\\">\\r\\n                              <div class=\\\"input-group col col-4\\\">\\r\\n                                <span class=\\\"input-group-btn\\\">\\r\\n                                  <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"item.Count=+item.Count-1;updatePrice();\\\"><i class=\\\"fa fa-minus\\\"></i></button>\\r\\n                                </span>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"padding:3px 4px\\\" (change)=\\\"updatePrice();\\\" [(ngModel)]=\\\"item.Count\\\">\\r\\n                                <span class=\\\"input-group-btn\\\">\\r\\n                                  <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"item.Count=+item.Count+1;updatePrice();\\\"><i class=\\\" fa fa-plus\\\"></i></button>\\r\\n                                </span>\\r\\n                              </div>\\r\\n       <strong>{{item.Name}}</strong><strong class=\\\"pull-right\\\">{{item.Price}}$</strong>\\r\\n     </div>\\r\\n                            </li>\\r\\n                              </ul>\\r\\n                              <strong style=\\\"font-size:larger\\\">Total Price:{{TotalPrice}}</strong>\\r\\n                    </div>\\r\\n                    <button class=\\\"btn btn-primary\\\">Confirm Order</button>\\r\\n                </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\nimport { DragulaModule, DragulaService } from \"ng2-dragula/ng2-dragula\";\r\n//import { HttpService } from './sendOrder.service';\r\nimport { Observable } from 'rxjs/Rx';\r\n@Component({\r\n  selector: 'new-order',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\nCategories:any[];\r\nOrderItems:Product[]=[];\r\nProducts :{Category:string,Items:Product[]}[]=[];\r\nTotalPrice:number=0;\r\npublic getProducts(): Observable<any> {\r\n    return this.http.get( \"./getAllProducts\")\r\n        .map((res: any) => <any>res.json())\r\n        .catch((err: Response, caught: Observable<any>) => { return Observable.throw(caught); });\r\n}\r\n\r\nconstructor(private dragulaService: DragulaService, private http: Http) {\r\n      this.getProducts().subscribe((data) => {\r\n           this.Categories=[...new Set(data.map(item => item.fields.Category))];\r\n        this.Categories.forEach((cat)=>{\r\n                      this.Products.push({Category:cat,Items:data.filter(x=>x.fields.Category==cat).map(item => new Product(item.pk,item.fields.Name,item.fields.Price,item.fields.Description))});\r\n            }  );\r\n\r\n              //data.filter(p => p.fields.Category==cat).map(x=>new Product(x.pk,x.fields.Name,x.fields.Price,x.fields.Description)))});\r\n\r\n  });\r\n          dragulaService.setOptions('fourth-bag', {\r\n            revertOnSpill: true\r\n        });\r\n\t\tdragulaService.dropModel.subscribe((value) => {\r\n\r\n\t\t\t \t\tthis.updatePrice();\r\n        });\r\n}\r\nadd(item: Product,CategoryIndex: number,ItemIndex:number): void {\r\n            this.Products[CategoryIndex].Items.splice(ItemIndex,1);\r\n            item.Count=1;\r\n            this.OrderItems.push(item);\r\n            this.TotalPrice=this.TotalPrice+item.Price;\r\n}\r\nupdatePrice():void{\r\n  \t\t\t this.TotalPrice=this.OrderItems.reduce((a,b)=>(a+(b.Count*b.Price)),0);\r\n}\r\n}\r\nexport class Product {\r\n  constructor(public ID: number,public Name: string,public Price: number,public Description:string){}\r\n  Count:number =1;\r\n  /*  ID: number;\r\n    Name: string;\r\n    Price: number;\r\n    Description:string;\r\n*/\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule,Injectable } from '@angular/core';\r\nimport { HttpModule,JsonpModule } from '@angular/http';\r\nimport { FormsModule} from '@angular/forms';\r\nimport { DragulaModule, DragulaService } from 'ng2-dragula/ng2-dragula'\r\nimport { AppComponent } from './app.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpModule,\r\n    JsonpModule,\r\n\tDragulaModule,\r\n   FormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}