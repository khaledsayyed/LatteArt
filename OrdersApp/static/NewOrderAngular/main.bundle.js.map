{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-7\\\">\\r\\n           <div *ngIf=\\\"view\\\" class=\\\"card card-outline mb-3\\\">\\r\\n\\r\\n                    <div class=\\\"card-header card-primary\\\" style=\\\"font-size:15px;font-weight:bolder\\\">Available Products</div>\\r\\n\\r\\n                    <!--div class=\\\"input-group input-group-lg inner-addon left-addon\\\" style=\\\"width:100%\\\"><input type=\\\"search\\\" class=\\\"form-control input-lg\\\" (keyup)=\\\"filter()\\\" style=\\\"border-radius:0px\\\" name=\\\"\\\" placeholder=\\\"search\\\" [(ngModel)]=\\\"SearchTerm\\\" /><i style=\\\"z-index:55;\\\" class=\\\"fa fa-search searchIcon fa-lg\\\"></i><span *ngIf=\\\"SearchTerm.length>0\\\" (click)=\\\"clearSearch();\\\" class=\\\"fa fa-window-close fa-2x searchClear\\\"> </span></div-->\\r\\n                      <div *ngFor=\\\"let product of Products; let i = index\\\">\\r\\n                          <div class=\\\"card-block card-secondary\\\" style=\\\"padding:0;padding-left:10px;font-weight:strong;font-size:larger;\\\">{{product.Category}}</div>\\r\\n                    <div class=\\\"card-block\\\" style=\\\"padding:0\\\">\\r\\n                        <ul  [dragula]='\\\"fourth-bag\\\"' class=\\\"list-group list-group-flush\\\" [dragulaModel]='product.Items'>\\r\\n                            <li *ngFor=\\\"let item of product.Items; let j = index\\\" style=\\\"margin:5px;padding:14px;\\\" class=\\\"list-group-item item\\\">\\r\\n<button class=\\\"btn pull-right\\\" style=\\\"background-color:#1ab394;color:white;\\\" (click)=\\\"add(item,i,j)\\\">ADD</button>\\r\\n                               <strong style=\\\"font-size:larger\\\">{{ item.Name }} <span class=\\\"text-muted\\\">($ {{ item.Price}} )</span></strong>\\r\\n                            </li>\\r\\n                            </ul>\\r\\n                    </div>\\r\\n                </div>\\r\\n              </div>\\r\\n           <div *ngIf=\\\"!view\\\" class=\\\"card card-outline mb-3\\\">\\r\\n\\r\\n                    <div class=\\\"card-header card-primary\\\" style=\\\"font-size:15px;font-weight:bolder\\\">Order Items</div>\\r\\n\\r\\n                    <!--div class=\\\"input-group input-group-lg inner-addon left-addon\\\" style=\\\"width:100%\\\"><input type=\\\"search\\\" class=\\\"form-control input-lg\\\" (keyup)=\\\"filter()\\\" style=\\\"border-radius:0px\\\" name=\\\"\\\" placeholder=\\\"search\\\" [(ngModel)]=\\\"SearchTerm\\\" /><i style=\\\"z-index:55;\\\" class=\\\"fa fa-search searchIcon fa-lg\\\"></i><span *ngIf=\\\"SearchTerm.length>0\\\" (click)=\\\"clearSearch();\\\" class=\\\"fa fa-window-close fa-2x searchClear\\\"> </span></div-->\\r\\n\\r\\n\\r\\n                     <ul  class=\\\"list-group list-group-flush\\\" style=\\\"height:130px;overflow-y:auto;\\\">\\r\\n                         <li  style=\\\"margin:5px;\\\" *ngFor=\\\"let item of OrderItems\\\" class=\\\"list-group-item item\\\">\\r\\n <div class=\\\"row\\\">\\r\\n <div class=\\\"col col-8\\\">{{ item.Name }} <span class=\\\"text-muted\\\">($ {{ item.Price}} )</span>\\r\\n </div>                      <div class=\\\"input-group col col-3\\\">\\r\\n                             <span class=\\\"input-group-btn\\\">\\r\\n                               <button *ngIf=\\\"item.Count>1\\\" class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"item.Count=+item.Count-1;updatePrice();\\\"><i class=\\\"fa fa-minus\\\"></i></button>\\r\\n                               <button *ngIf=\\\"item.Count==1\\\" class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"removeItem(item);\\\"><i class=\\\"fa fa-trash\\\"></i></button>\\r\\n                             </span>\\r\\n                             <input type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"padding:3px 4px\\\" (change)=\\\"updatePrice();\\\" [(ngModel)]=\\\"item.Count\\\" (change)=\\\"item.Count=(item.Count>item.Quantity)?item.Quantity:item.Count;updatePrice();\\\">\\r\\n                             <span class=\\\"input-group-btn\\\">\\r\\n                               <button class=\\\"btn btn-secondary\\\" [title]=\\\"((item.Unlimited)||item.Count<item.Quantity)?'add':'no more items to buy'\\\" [disabled]=\\\"!((item.Unlimited)||item.Count<item.Quantity)\\\" type=\\\"button\\\" (click)=\\\"item.Count=+item.Count+1;updatePrice();\\\"><i class=\\\" fa fa-plus\\\"></i></button>\\r\\n                             </span>\\r\\n                           </div>\\r\\n\\r\\n  </div>\\r\\n                         </li>\\r\\n                       </ul>\\r\\n                       <button (click)=\\\"view=true\\\" class=\\\"btn btn-primary\\\">Add more Items</button>\\r\\n              </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-lg-5\\\" >\\r\\n       <!--div class=\\\"affix\\\"-->\\r\\n          <div class=\\\"card card-outline mb-4\\\"style=\\\"padding:10px;\\\">\\r\\n                    <div class=\\\"card-header card-primary\\\" style=\\\"font-size:15px;font-weight:larger\\\">Your Order</div>\\r\\n<div class=\\\"form-group\\\">\\r\\n  <p for=\\\"exampleFormControlSelect1\\\">Branch</p>\\r\\n  <select class=\\\"form-control\\\" id=\\\"exampleFormControlSelect1\\\" [(ngModel)]=\\\"SelectedBranch\\\">\\r\\n    <option *ngFor=\\\"let branch of Branches\\\" [ngValue]=\\\"branch.ID\\\">{{branch.Name}}</option>\\r\\n\\r\\n  </select>\\r\\n</div>\\r\\n<p>pickup date and time</p>\\r\\n                    <datetime [datepicker]=\\\"datepickerOpts\\\" [(ngModel)]=\\\"date\\\"></datetime>\\r\\n                    <p>Payment Method</p>\\r\\n                    <!-- <div class=\\\"custom-control custom-checkbox\\\">\\r\\n  <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"customCheck1\\\">\\r\\n  <label class=\\\"custom-control-label\\\" for=\\\"customCheck1\\\">On pickup</label>\\r\\n</div>\\r\\n<div class=\\\"custom-control custom-checkbox\\\">\\r\\n  <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"customCheck2\\\">\\r\\n  <label class=\\\"custom-control-label\\\" for=\\\"customCheck2\\\">Credit card</label>\\r\\n</div>\\r\\n<div class=\\\"custom-control custom-checkbox\\\">\\r\\n<input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"customCheck3\\\">\\r\\n<label class=\\\"custom-control-label\\\" for=\\\"customCheck3\\\">From Walet</label>\\r\\n</div> -->\\r\\n<div class=\\\"radio radio-danger\\\">\\r\\n   <input type=\\\"radio\\\" name=\\\"radio1\\\" id=\\\"radio1\\\" value=\\\"Wallet\\\" [(ngModel)]=\\\"PaymentMethod\\\" checked>\\r\\n    <label for=\\\"radio1\\\" style=\\\"font-size:smaller\\\">\\r\\n        From Wallet\\r\\n    </label>\\r\\n</div>\\r\\n<div class=\\\"radio radio-danger\\\">\\r\\n                                <input type=\\\"radio\\\" name=\\\"radio2\\\" id=\\\"radio2\\\" value=\\\"CreditCard\\\" [(ngModel)]=\\\"PaymentMethod\\\">\\r\\n                                <label for=\\\"radio2\\\" style=\\\"font-size:smaller\\\">\\r\\n                                    By Credit Card\\r\\n                                </label>\\r\\n</div>\\r\\n<div class=\\\"radio radio-danger\\\">\\r\\n                                <input type=\\\"radio\\\" name=\\\"radio3\\\" id=\\\"radio3\\\" value=\\\"OnPickup\\\" [(ngModel)]=\\\"PaymentMethod\\\">\\r\\n                                <label for=\\\"radio3\\\" style=\\\"font-size:smaller\\\">\\r\\n                                  On Pickup\\r\\n                                </label>\\r\\n</div>\\r\\n                     <div class=\\\"card-block\\\" style=\\\"padding:0\\\">\\r\\n                       <div *ngIf=\\\"view\\\">\\r\\n                       <p>Order Items</p>\\r\\n                        <ul [dragula]='\\\"fourth-bag\\\"' class=\\\"list-group list-group-flush\\\" [dragulaModel]='OrderItems' style=\\\"height:130px;overflow-y:auto;\\\">\\r\\n                            <li  style=\\\"margin:5px;\\\" *ngFor=\\\"let item of OrderItems\\\" class=\\\"list-group-item item\\\">\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col col-8\\\">{{ item.Name }} <span class=\\\"text-muted\\\">($ {{ item.Price}} )</span>\\r\\n  </div>                      <div class=\\\"input-group col col-3\\\">\\r\\n                                <span class=\\\"input-group-btn\\\">\\r\\n                                  <button *ngIf=\\\"item.Count>1\\\" class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"item.Count=+item.Count-1;updatePrice();\\\"><i class=\\\"fa fa-minus\\\"></i></button>\\r\\n                                  <button *ngIf=\\\"item.Count==1\\\" class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"removeItem(item);\\\"><i class=\\\"fa fa-trash\\\"></i></button>\\r\\n                                </span>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"padding:3px 4px\\\" (change)=\\\"updatePrice();\\\" [(ngModel)]=\\\"item.Count\\\" (change)=\\\"item.Count=(item.Count>item.Quantity)?item.Quantity:item.Count;updatePrice();\\\">\\r\\n                                <span class=\\\"input-group-btn\\\">\\r\\n                                  <button class=\\\"btn btn-secondary\\\" [title]=\\\"((item.Unlimited)||item.Count<item.Quantity)?'add':'no more items to buy'\\\" [disabled]=\\\"!((item.Unlimited)||item.Count<item.Quantity)\\\" type=\\\"button\\\" (click)=\\\"item.Count=+item.Count+1;updatePrice();\\\"><i class=\\\" fa fa-plus\\\"></i></button>\\r\\n                                </span>\\r\\n                              </div>\\r\\n\\r\\n     </div>\\r\\n                            </li>\\r\\n                          </ul></div>\\r\\n                              <input class=\\\"form-control\\\" id=\\\"desc\\\" name=\\\"desc\\\" placeholder=\\\"Additional order notes\\\" [(ngModel)]=\\\"Description\\\" type=\\\"text\\\" value=\\\"\\\" /><br/>\\r\\n                              <div class=\\\"row\\\">\\r\\n                              <strong class=\\\"col col-9\\\">Total Price:{{TotalPrice}}</strong>\\r\\n                              <button (click)=\\\"sendOrder()\\\" class=\\\"btn btn-primary col col-2 col-\\\">Confirm Order</button>\\r\\n                            </div>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n                <!--/div-->\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n<link href=\\\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\\\" rel=\\\"stylesheet\\\">\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component,ElementRef } from '@angular/core';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\nimport { DragulaModule, DragulaService } from \"ng2-dragula/ng2-dragula\";\r\nimport { Observable } from 'rxjs/Rx';\r\n@Component({\r\n  selector: 'new-order',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent{\r\n  view:boolean=true;\r\n  selected:string;\r\n  id:number=-1;\r\n  Description:string=\"\";\r\n  date:Date=null;\r\n  datepickerOpts = {\r\n    startDate: new Date(2016, 5, 10),\r\n    autoclose: true,\r\n    todayBtn: 'linked',\r\n    todayHighlight: true,\r\n    assumeNearbyYear: true,\r\n    format: 'D, d MM yyyy'\r\n}\r\nPaymentMethod:string='Wallet';\r\nSelectedBranch:number;\r\nCategories:any[];\r\nOrderItems:Product[]=[];\r\nProducts :{Category:string,Items:Product[]}[]=[];\r\nBranches:{ID:number,Name:string}[]=[];\r\nTotalPrice:number=0;\r\npublic getProducts(): Observable<any> {\r\n    return this.http.get( \"./getAllProducts\")\r\n        .map((res: any) => <any>res.json())\r\n        .catch((err: Response, caught: Observable<any>) => { return Observable.throw(caught); });\r\n}\r\npublic getOrder(): Observable<any> {\r\n    return this.http.get( \"./getOrder?id=\"+this.id)\r\n        .map((res: any) => <any>res.json())\r\n        .catch((err: Response, caught: Observable<any>) => { return Observable.throw(caught); });\r\n}\r\npublic getBranches(): Observable<any> {\r\n    return this.http.get( \"./getBranches\")\r\n        .map((res: any) => <any>res.json())\r\n        .catch((err: Response, caught: Observable<any>) => { return Observable.throw(caught); });\r\n}\r\nconstructor(private dragulaService: DragulaService, private http: Http, elm: ElementRef){//}, private _httpservice: HttpService,) {\r\n  if(elm.nativeElement.getAttribute('id')){\r\n  this.id = elm.nativeElement.getAttribute('id');\r\n\r\n      this.getOrder().subscribe((data) => {\r\n        this.date=new Date(data[0].PickupTime);\r\n        this.PaymentMethod=data[0].PaymentMethod;\r\n        this.SelectedBranch=data[0].Branch;\r\n        this.TotalPrice=data[0].TotalPrice;\r\n        this.Description=data[0].Description;\r\n       this.selected  = data[0].items.reduce((a,b)=>(a+(b.Product+':'+b.Quantity+',')),'');\r\n      });\r\n  }else{\r\n      this.selected = elm.nativeElement.getAttribute('selected');\r\n  }\r\n\r\n      this.getProducts().subscribe((data) => {\r\n           this.Categories=[...new Set(data.map(item => item.fields.Category))];\r\n        this.Categories.forEach((cat)=>{\r\n                      this.Products.push({Category:cat,Items:data.filter(x=>x.fields.Category==cat).map(item => new Product(item.pk,item.fields.Name,item.fields.Price,item.fields.Description,cat,item.fields.Stock,item.fields.unlimited))});\r\n            }  );\r\n\r\n              if (this.selected) {\r\n                  this.view=false;\r\n          let selectedItems = this.selected.split(',');\r\n\r\n          selectedItems.forEach(s=>{\r\n            if(s.split(':').length==2){\r\n              let ID = parseInt(s.split(':')[0]);\r\n              let count = parseInt(s.split(':')[1]);\r\n\r\n              var i=0;\r\n              this.Products.forEach(product=>{\r\n                  if(this.Products[i].Items.filter(x=>x.ID==ID).length>0){\r\n                    let itemIndex =  this.Products[i].Items.indexOf(this.Products[i].Items.filter(x=>x.ID==ID)[0]);\r\n                    this.add(this.Products[i].Items.filter(x=>x.ID==ID)[0],i,itemIndex,count)\r\n                  }\r\n                  i++;\r\n                });\r\n\r\n            }\r\n          });\r\n              }\r\n\r\n              //data.filter(p => p.fields.Category==cat).map(x=>new Product(x.pk,x.fields.Name,x.fields.Price,x.fields.Description)))});\r\n\r\n  });\r\n\r\n\r\n      this.getBranches().subscribe((data) => {\r\n        this.SelectedBranch = data[0].pk;\r\n   this.Branches = data.map(branch => {return {ID:branch.pk,Name:branch.fields.Name}});\r\n\r\n      }\r\n    );\r\n          dragulaService.setOptions('fourth-bag', {\r\n            revertOnSpill: true\r\n        });\r\n\t\tdragulaService.dropModel.subscribe((value) => {\r\n\t       this.updatePrice();\r\n        });\r\n}\r\n\r\nadd(item: Product,CategoryIndex: number,ItemIndex:number,count:number=1): void {\r\n            this.Products[CategoryIndex].Items.splice(ItemIndex,1);\r\n            item.Count=count<item.Quantity?count:item.Quantity;\r\n            this.OrderItems.push(item);\r\n            this.updatePrice()\r\n}\r\nremoveItem(item:Product):void{\r\n  let ItemIndex = this.OrderItems.indexOf(item);\r\n  this.Products.filter(p => p.Category==item.Category)[0].Items.push(item);\r\n  // this.Products[CategoryIndex].Items.push(item);\r\n  this.OrderItems.splice(ItemIndex,1);\r\n  this.updatePrice();\r\n}\r\nupdatePrice():void{\r\n  \t\t\t this.TotalPrice=this.OrderItems.reduce((a,b)=>(a+(b.Count*b.Price)),0);\r\n}\r\nsendOrder():void{\r\n  this.sendOrderMethod().subscribe((data)=>window.location.replace(\"../ordersttt\"));\r\n}\r\nsendOrderMethod(): Observable<any>{\r\n  let headers = new Headers({ 'Content-Type': 'application/json' });\r\n     let options = new RequestOptions({ headers: headers });\r\n     let order = {Branch:this.SelectedBranch,PaymentMethod:this.PaymentMethod,PickupTime:this.date, OrderItems:this.OrderItems,Description:this.Description,Price:this.TotalPrice}\r\n     console.log(order);\r\n     let body = JSON.stringify(order);\r\n     return this.http.post('./sendOrder?id='+this.id, body, options ).map((res: Response) => res.json());\r\n\r\n}\r\n}\r\nexport class Product {\r\n  constructor(public ID: number,public Name: string,public Price: number,public Description:string,public Category:string,public Quantity:number,public Unlimited:boolean){}\r\n  Count:number =1;\r\n  /*  ID: number;\r\n    Name: string;\r\n    Price: number;\r\n    Description:string;\r\n*/\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule,Injectable } from '@angular/core';\r\nimport { HttpModule,JsonpModule } from '@angular/http';\r\nimport { FormsModule} from '@angular/forms';\r\nimport { DragulaModule, DragulaService } from 'ng2-dragula/ng2-dragula'\r\nimport { AppComponent } from './app.component';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport * as $ from 'jquery';\r\nimport 'bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js';\r\nimport 'bootstrap-timepicker/js/bootstrap-timepicker.js';\r\nimport { NKDatetimeModule } from 'ng2-datetime/ng2-datetime.js';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpModule,\r\n    JsonpModule,\r\n\t DragulaModule,\r\n   FormsModule,\r\n   HttpClientModule,\r\n   NKDatetimeModule\r\n  ],\r\n  providers: [HttpClientModule],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}