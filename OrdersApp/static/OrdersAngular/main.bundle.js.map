{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app3/app3.component.css","./src/app3/app3.component.html","./src/app3/app3.component.ts","./src/app3/app3.module.ts","./src/environments/environment.ts","./src/main3.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app3/app3.component.css\n// module id = ./src/app3/app3.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <div style=\\\"margin: auto;  margin-top:50px\\\">\\r\\n    <data-table id=\\\"orders-grid\\\"\\r\\n        [items]=\\\"ordersdata\\\"\\r\\n        [itemCount]=\\\"ordersCount\\\"\\r\\n        (reload)=\\\"reloadFilms($event)\\\"\\r\\n\\r\\n        [limit]=\\\"8\\\"\\r\\n        [sortBy]=\\\"'id'\\\"\\r\\n        [sortAsc]=\\\"false\\\"\\r\\n\\r\\n        [selectColumn]=\\\"true\\\"\\r\\n        [multiSelect]=\\\"false\\\"\\r\\n        [substituteRows]=\\\"false\\\"\\r\\n        [expandableRows]=\\\"true\\\"\\r\\n        [translations]=\\\"translations\\\"\\r\\n        [indexColumnHeader]=\\\"'#'\\\"\\r\\n        [selectOnRowClick]=\\\"true\\\"\\r\\n        >\\r\\n        <ng-template #dataTableExpand let-item=\\\"item\\\">\\r\\n        <div style=\\\"padding: 5px; color: gray\\\">\\r\\n          <ul>items\\r\\n            <li>hi</li>\\r\\n          </ul>\\r\\n<div [textContent]=\\\"item.Description\\\">\\r\\n</div>\\r\\n        </div>\\r\\n        </ng-template>\\r\\n        <data-table-column\\r\\n            [property]=\\\"'id'\\\"\\r\\n            [header]=\\\"'ID'\\\"\\r\\n            [sortable]=\\\"true\\\">\\r\\n        </data-table-column>\\r\\n        <data-table-column\\r\\n            [property]=\\\"'PickupTime'\\\"\\r\\n            [header]=\\\"'Pickup Time'\\\"\\r\\n            [sortable]=\\\"true\\\">\\r\\n        </data-table-column>\\r\\n        <data-table-column\\r\\n            [property]=\\\"'PaymentMethod'\\\"\\r\\n            [header]=\\\"'Payment'\\\"\\r\\n            [sortable]=\\\"false\\\">\\r\\n        </data-table-column>\\r\\n        <data-table-column\\r\\n            [property]=\\\"'Branch'\\\"\\r\\n            [header]=\\\"'Branch'\\\">\\r\\n        </data-table-column>\\r\\n        <data-table-column\\r\\n            [property]=\\\"'TotalPrice'\\\"\\r\\n            [header]=\\\"'Total Price'\\\">\\r\\n        </data-table-column>\\r\\n        <data-table-column *ngIf=\\\"canEdit\\\"\\r\\n            [property]=\\\"'OrderStatus'\\\"\\r\\n            [header]=\\\"'Order Status'\\\">\\r\\n            <ng-template #dataTableCell let-item=\\\"item\\\">\\r\\n              <select class=\\\"form-control\\\" id=\\\"ok1\\\" [(ngModel)]=\\\"item.OrderStatus\\\" (change)=\\\"updateStatus(item.id,item.OrderStatus)\\\">\\r\\n                <option *ngFor=\\\"let status of orderStatus\\\" [ngValue]=\\\"status.ID\\\">{{status.Name}}</option>\\r\\n\\r\\n              </select>\\r\\n       <!-- <input type=\\\"number\\\" [(ngModel)]=\\\"item.year\\\" class=\\\"form-control input-sm\\\" style=\\\"width: 75px\\\"/> -->\\r\\n     </ng-template>\\r\\n        </data-table-column>\\r\\n        <data-table-column\\r\\n            [header]=\\\"'Actions'\\\">\\r\\n        <ng-template #dataTableHeader let-item=\\\"item\\\">\\r\\n        <i>Actions</i>\\r\\n      </ng-template>\\r\\n      <ng-template #dataTableCell let-item=\\\"item\\\">\\r\\n        <a [href]=\\\"'orders/edit?id='+item.id\\\" class=\\\"btn btn-sm btn-primary\\\">Edit</a>\\r\\n        <a [href]=\\\"'orders/delete?id='+item.id\\\" class=\\\"btn btn-sm btn-warning\\\">Delete</a>\\r\\n      </ng-template>\\r\\n          </data-table-column>\\r\\n    </data-table>\\r\\n\\r\\n</div>\\r\\n</div>\\r\\n<link href=\\\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\\\" rel=\\\"stylesheet\\\">\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app3/app3.component.html\n// module id = ./src/app3/app3.component.html\n// module chunks = main","import { Component, ViewChild,ElementRef} from '@angular/core';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\nimport { DataTable, DataTableTranslations, DataTableResource } from 'angular5-data-table';\r\nimport { Observable } from 'rxjs/Rx';\r\n@Component({\r\n  selector: 'view-orders',\r\n  templateUrl: './app3.component.html',\r\n  styleUrls: ['./app3.component.css']\r\n})\r\nexport class App3Component {\r\n\r\n  ordersdata:any[] ;\r\n  canEdit:boolean=false;\r\n  orderStatus = [\t{ID:0, Name:'Received'},{ID:1,Name: 'Cooking'},{ID:2, Name:'Ready'}];\r\n  ordersResource;\r\n    ordersCount = 0;\r\n\r\n    @ViewChild(DataTable) ordersTable;\r\n\r\n    constructor( private http: Http, elm: ElementRef){\r\n      this.canEdit  = elm.nativeElement.getAttribute('edit');\r\n         this.getOrders().subscribe((data) => {\r\n            this.ordersdata = data.map(x=>{return {id:x.id,PickupTime:x.PickupTime.substring(0, 10),PaymentMethod:x.PaymentMethod,Branch:x.Branch_Name,TotalPrice:x.TotalPrice,Description:'Items: '+x.items.reduce((a,b)=>(a+(b.Product_Name+':'+b.Quantity)+'|'),'')+'Additional Notes:'+x.Description,OrderStatus:x.OrderStatus};});\r\n            this.ordersResource = new DataTableResource(this.ordersdata);\r\n              this.ordersResource.count().then(count => this.ordersCount = count);\r\n\r\n      });\r\n\r\n    }\r\n\r\n    reloadFilms(params) {\r\n        //this.filmResource.query(params).then(films => this.films = films);\r\n    }\r\n\r\n    cellColor(car) {\r\n        return 'rgb(255, 255,255)';// + (155 + Math.floor(100 - ((car.rating - 8.7)/1.3)*100)) + ')';\r\n    };\r\n\r\n    // special params:\r\n    translations = <DataTableTranslations>{\r\n        indexColumn: 'Index column',\r\n        expandColumn: 'Expand column',\r\n        selectColumn: 'Select column',\r\n        paginationLimit: 'Max results',\r\n        paginationRange: 'Result range'\r\n    };\r\n// Categories:any[];\r\n// Products :{Category:string,Items:Product[]}[]=[];\r\n// ProductsIdQty:string;\r\n// TotalPrice:number=0;\r\npublic getOrders(): Observable<any> {\r\n    return this.http.get( \"./orders/getOrders\")\r\n        .map((res: any) => <any>res.json())\r\n        .catch((err: Response, caught: Observable<any>) => { return Observable.throw(caught); });\r\n}\r\npublic changeStatus(id:number,status:number): Observable<any> {\r\n    return this.http.get( \"./orders/changeStatus?id=\"+id+\"&status=\"+status)\r\n        .map((res: any) => <any>res.json())\r\n        .catch((err: Response, caught: Observable<any>) => { return Observable.throw(caught); });\r\n}\r\npublic updateStatus(id:number,status:number){\r\n   this.changeStatus(id,status).subscribe((data) => {console.log(\"Status changed\");});\r\n}\r\n// constructor( private http: Http){\r\n  //    this.getProducts().subscribe((data) => {console.log(data);\r\n  //          this.Categories=[...new Set(data.map(item => item.fields.Category))];\r\n  //       this.Categories.forEach((cat)=>{\r\n  //                     this.Products.push({Category:cat,Items:data.filter(x=>x.fields.Category==cat).map(item => new Product(item.pk,item.fields.Name,item.fields.Price,item.fields.Description,item.fields.Image))});\r\n  //           }  );\r\n  //\r\n  //\r\n  //\r\n  // });\r\n  //\r\n\r\n// }\r\n  // UpdateProductsList():any{\r\n  //     this.TotalPrice=0;\r\n  //     this.ProductsIdQty='';\r\n  //   this.Products.forEach((set)=>{\r\n  //   this.TotalPrice = this.TotalPrice + set.Items.reduce((a,b)=>(a+(b.Selected?(b.Count*b.Price):0)),0);\r\n  //   this.ProductsIdQty = this.ProductsIdQty + set.Items.reduce((a,b)=>(a+(b.Selected?(b.ID+':'+b.Count+','):'')),'');\r\n  //   });\r\n  //\r\n  // }\r\n\r\n}\r\n// export class Product {\r\n//   constructor(public ID: number,public Name: string,public Price: number,public Description:string,public Image:string){}\r\n//   Count:number =1;\r\n//   Selected:boolean = false;\r\n// }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app3/app3.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule,Injectable, ViewChild  } from '@angular/core';\r\nimport { HttpModule,JsonpModule } from '@angular/http';\r\nimport { FormsModule} from '@angular/forms';\r\nimport { App3Component } from './app3.component';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport { DataTableModule } from 'angular5-data-table';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    App3Component\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpModule,\r\n    JsonpModule,\r\n   FormsModule,\r\n   HttpClientModule,\r\n   DataTableModule\r\n  ],\r\n  providers: [HttpClientModule],\r\n  bootstrap: [App3Component]\r\n})\r\nexport class App3Module { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app3/app3.module.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { App3Module } from './app3/app3.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(App3Module)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main3.ts"],"sourceRoot":"webpack:///"}